package view;

import interface_adapter.menu.MenuController;
import interface_adapter.single_stock.SingleStockController;
import interface_adapter.single_stock.SingleStockState;
import interface_adapter.single_stock.graphical.SingleStockGraphicalViewModel;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Map;

import interface_adapter.single_stock.graphical.StockPriceDataset;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;

public class SingleStockGraphicalView extends JPanel implements ActionListener, PropertyChangeListener {
    public final String viewName = "graphical";
    private final JButton menu;
    private final JLabel title;
    private final JLabel detail;
    private final JLabel currentPrice;
    private final JFreeChart chart;

    public SingleStockGraphicalView(SingleStockGraphicalViewModel viewModel,
                                    Map<String, SingleStockController> singleStockControllers,
                                    MenuController menuController){
        // Initial setup
        viewModel.addPropertyChangeListener(this);

        // Setting up stock title and symbols
        title = new JLabel();
        title.setFont(SingleStockGraphicalViewModel.font1);
        currentPrice = new JLabel();
        currentPrice.setFont(SingleStockGraphicalViewModel.font2);
        detail = new JLabel();
        detail.setFont(SingleStockGraphicalViewModel.font3);

        // Setting up new buttons
        JPanel buttons = new JPanel();
        for (String label : SingleStockGraphicalViewModel.BUTTON_LABELS) {
            if (singleStockControllers.containsKey(label)) {
                JButton button = new JButton(label);
                button.addActionListener(e ->
                        singleStockControllers.get(label).execute(viewModel.getState().getSymbol()));
                buttons.add(button);
            }
        }
        menu = new JButton(SingleStockGraphicalViewModel.MENU_BUTTON_LABEL);
        buttons.add(menu);

        // Setting up the graph
        chart = ChartFactory.createCandlestickChart(null, "Time", "Price",
                (StockPriceDataset)viewModel.getState().getData(), false); // some chart is generated by the JFreeChart library in output data
        ChartPanel chartPanel = new ChartPanel(chart);

        // Switching to menu
        menu.addActionListener(e -> {
            if (e.getSource().equals(menu))
                menuController.returnToMenu();
        });

        // Adding buttons and setting layout
        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        this.add(new SingleStockPanel(title, currentPrice, detail, chartPanel, buttons));

    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        SingleStockState state = (SingleStockState) evt.getNewValue();

        title.setText(state.getTitle());
        currentPrice.setText(state.getCurrentPrice());
        detail.setText(state.getDetail());
        chart.getXYPlot().setDataset((StockPriceDataset)state.getData());

        this.repaint();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
    }
}
